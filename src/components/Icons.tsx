import React from 'react';

interface IconProps {
  className?: string;
  size?: number;
  color?: string;
  disabled?: boolean;
}

// Send/Email icon from BuyLine
export const SendIcon: React.FC<IconProps> = ({ className, size = 20, color, disabled }) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    preserveAspectRatio="none"
    width={size}
    height={size}
    overflow="visible"
    className={className}
    viewBox="0 0 21 21"
    fill="none"
  >
    <g id="send-email-1">
      <path
        id="Shape"
        fillRule="evenodd"
        clipRule="evenodd"
        d="M1.90273 8.85333C1.37949 8.70573 1.01357 8.2343 1.00037 7.6908C0.987168 7.1473 1.32977 6.65867 1.84523 6.48583L18.5711 1.03083C18.7945 0.958012 19.0398 1.01645 19.2064 1.18215C19.373 1.34785 19.4327 1.5929 19.3611 1.81667L13.9102 18.5508C13.7382 19.0672 13.249 19.4107 12.7049 19.3973C12.1608 19.3839 11.6892 19.0167 11.5427 18.4925L9.67106 10.7167L1.90273 8.85333Z"
        stroke={color || (disabled ? '#999FA1' : '#009CDF')}
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        id="Shape_2"
        d="M19.2069 1.18083L9.67106 10.7167"
        stroke={color || (disabled ? '#999FA1' : '#009CDF')}
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </g>
  </svg>
);

// Edit/Pencil icon from BuyLine
export const EditIcon: React.FC<IconProps> = ({ className, size = 20, color, disabled }) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 24 25"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path
      d="M10.1221 5.00073C10.5362 5.00073 10.8719 5.33666 10.8721 5.75073C10.8721 6.16495 10.5363 6.50073 10.1221 6.50073H2.62207C2.20796 6.50073 1.87223 6.83666 1.87207 7.25073V22.2507C1.87207 22.6649 2.20786 23.0007 2.62207 23.0007H17.6221C18.0363 23.0007 18.3721 22.6649 18.3721 22.2507V14.7507C18.3722 14.3367 18.708 14.0007 19.1221 14.0007C19.5362 14.0007 19.8719 14.3367 19.8721 14.7507V22.2507C19.8721 23.4934 18.8647 24.5007 17.6221 24.5007H2.62207C1.37943 24.5007 0.37207 23.4934 0.37207 22.2507V7.25073C0.37223 6.00823 1.37953 5.00073 2.62207 5.00073H10.1221ZM18.501 1.37866C19.6725 0.207539 21.5717 0.207579 22.7432 1.37866C23.9145 2.55026 23.9147 4.45033 22.7432 5.62183L13.1973 15.1677C13.0826 15.2823 12.9339 15.3567 12.7734 15.3796L9.06152 15.9109C8.56668 15.9817 8.14253 15.5571 8.21289 15.0623L8.74219 11.3494C8.76511 11.1888 8.84046 11.0403 8.95508 10.9255L18.501 1.37866ZM21.6826 2.44019C21.0968 1.85439 20.1473 1.85439 19.5615 2.44019L10.1924 11.8093L9.83887 14.2839L12.3135 13.9304L21.6826 4.56128C22.2683 3.9756 22.2681 3.02601 21.6826 2.44019Z"
      fill={color || (disabled ? '#999FA1' : '#009CDF')}
    />
  </svg>
);

// Trash/Delete icon from BuyLine
export const TrashIcon: React.FC<IconProps> = ({ className, size = 20, color, disabled }) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    preserveAspectRatio="none"
    width={size}
    height={size}
    overflow="visible"
    className={className}
    viewBox="0 0 24 22"
    fill="none"
  >
    <path
      id="color"
      d="M14.6025 0C15.9552 0.000251909 17.0595 1.08982 17.0596 2.44434V3.42188H23.2773C23.6764 3.422 23.9998 3.75048 24 4.15527C24 4.52653 23.7278 4.83328 23.375 4.88184L23.2773 4.88867H20.5312V19.5557C20.531 20.9101 19.426 21.9999 18.0732 22H5.92871C4.57593 22 3.47095 20.9102 3.4707 19.5557V4.88867H0.722656C0.323522 4.88854 0 4.5602 0 4.15527C0.000141537 3.78415 0.272248 3.47726 0.625 3.42871L0.722656 3.42188H6.93945V2.44434C6.93951 1.08966 8.04456 0 9.39746 0H14.6025ZM4.91602 19.5557C4.91625 20.0551 5.30736 20.4737 5.81738 20.5273L5.92773 20.5332H18.0723C18.6355 20.5332 19.0847 20.0908 19.085 19.5557V4.88867H4.91602V19.5557ZM9.39648 8.55566C9.76246 8.55566 10.0654 8.83151 10.1133 9.18945L10.1191 9.28906V16.1338C10.1189 16.5386 9.79557 16.8662 9.39648 16.8662C9.03062 16.8661 8.72852 16.5903 8.68066 16.2324L8.67383 16.1338V9.28906C8.67383 8.88413 8.99735 8.55579 9.39648 8.55566ZM14.6016 8.55566C14.9675 8.55566 15.2705 8.83151 15.3184 9.18945L15.3242 9.28906V16.1328C15.3242 16.5378 15.0008 16.8662 14.6016 16.8662C14.2357 16.8661 13.9336 16.5903 13.8857 16.2324L13.8789 16.1328V9.28906C13.8789 8.88411 14.2024 8.55576 14.6016 8.55566ZM9.39648 1.4668C8.83325 1.46697 8.38483 1.90918 8.38477 2.44434V3.42188H15.6133V2.44434C15.6132 1.94484 15.2229 1.52638 14.7129 1.47266L14.6016 1.4668H9.39648Z"
      fill={color || (disabled ? '#999FA1' : '#009CDF')}
    />
  </svg>
);

// Success/Checkmark icon from BuyLine (16x16 version)
export const SuccessIcon: React.FC<IconProps> = ({ className, size = 16, color }) => (
  <svg 
    width={size} 
    height={size} 
    viewBox="0 0 16 16" 
    fill="none" 
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path 
      fillRule="evenodd" 
      clipRule="evenodd" 
      d="M0.200073 7.99971C0.200073 3.69189 3.69225 0.199707 8.00007 0.199707C12.3079 0.199707 15.8001 3.69189 15.8001 7.99971C15.8001 12.3075 12.3079 15.7997 8.00007 15.7997C3.69225 15.7997 0.200073 12.3075 0.200073 7.99971Z" 
      fill={color || "#4DA466"}
    />
    <path 
      fillRule="evenodd" 
      clipRule="evenodd" 
      d="M11.6803 5.68769C11.8527 5.87926 11.8372 6.17433 11.6456 6.34675L7.20112 10.3467C7.02365 10.5065 6.75423 10.5065 6.57676 10.3467L4.35456 8.34674C4.16299 8.17433 4.14746 7.87926 4.31988 7.68769C4.49229 7.49612 4.78736 7.48059 4.97893 7.65301L6.88894 9.37204L11.0212 5.653C11.2128 5.48059 11.5079 5.49612 11.6803 5.68769Z" 
      fill="white"
    />
  </svg>
);

// Failure/X icon from BuyLine (16x16 version)
export const FailureIcon: React.FC<IconProps> = ({ className, size = 16, color }) => (
  <svg 
    width={size} 
    height={size} 
    viewBox="0 0 16 16" 
    fill="none" 
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path 
      fillRule="evenodd" 
      clipRule="evenodd" 
      d="M0.200073 7.99971C0.200073 3.69189 3.69225 0.199707 8.00007 0.199707C12.3079 0.199707 15.8001 3.69189 15.8001 7.99971C15.8001 12.3075 12.3079 15.7997 8.00007 15.7997C3.69225 15.7997 0.200073 12.3075 0.200073 7.99971Z" 
      fill={color || "#EE695C"}
    />
    <path 
      fillRule="evenodd" 
      clipRule="evenodd" 
      d="M10.33 5.66989C10.5122 5.85213 10.5122 6.14761 10.33 6.32985L6.32997 10.3299C6.14773 10.5121 5.85225 10.5121 5.67001 10.3299C5.48776 10.1476 5.48776 9.85213 5.67001 9.66989L9.67001 5.66989C9.85225 5.48764 10.1477 5.48764 10.33 5.66989Z" 
      fill="white"
    />
    <path 
      fillRule="evenodd" 
      clipRule="evenodd" 
      d="M5.67001 5.66989C5.85225 5.48764 6.14773 5.48764 6.32997 5.66989L10.33 9.66989C10.5122 9.85213 10.5122 10.1476 10.33 10.3299C10.1477 10.5121 9.85225 10.5121 9.67001 10.3299L5.67001 6.32985C5.48776 6.14761 5.48776 5.85213 5.67001 5.66989Z" 
      fill="white"
    />
  </svg>
);

// Partial/Warning icon from BuyLine (16x16 version)
export const PartialIcon: React.FC<IconProps> = ({ className, size = 16, color }) => (
  <svg 
    width={size} 
    height={size} 
    viewBox="0 0 16 16" 
    fill="none" 
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path 
      fillRule="evenodd" 
      clipRule="evenodd" 
      d="M0.200073 7.99971C0.200073 3.69189 3.69225 0.199707 8.00007 0.199707C12.3079 0.199707 15.8001 3.69189 15.8001 7.99971C15.8001 12.3075 12.3079 15.7997 8.00007 15.7997C3.69225 15.7997 0.200073 12.3075 0.200073 7.99971Z" 
      fill={color || "#FBA23A"}
    />
    <path 
      fillRule="evenodd" 
      clipRule="evenodd" 
      d="M11.6803 5.68769C11.8527 5.87926 11.8372 6.17433 11.6456 6.34675L7.20112 10.3467C7.02365 10.5065 6.75423 10.5065 6.57676 10.3467L4.35456 8.34674C4.16299 8.17433 4.14746 7.87926 4.31988 7.68769C4.49229 7.49612 4.78736 7.48059 4.97893 7.65301L6.88894 9.37204L11.0212 5.653C11.2128 5.48059 11.5079 5.49612 11.6803 5.68769Z" 
      fill="white"
    />
  </svg>
);

// Loading spinner icon from BuyLine
export const SpinnerIcon: React.FC<IconProps> = ({ className, size = 20, color }) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
    style={{ animation: 'spin 1s linear infinite' }}
  >
    <path
      d="M12 2V6M12 18V22M4.93 4.93L7.76 7.76M16.24 16.24L19.07 19.07M2 12H6M18 12H22M4.93 19.07L7.76 16.24M16.24 7.76L19.07 4.93"
      stroke={color || "#009CDF"}
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

// Plus icon from Button and Ecart components
export const PlusIcon: React.FC<IconProps> = ({ className, size = 16, color }) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M8 0C8.27614 0 8.50436 0.205203 8.54048 0.47144L8.54545 0.545455V7.45455H15.4545C15.7558 7.45455 16 7.69875 16 8C16 8.27614 15.7948 8.50436 15.5286 8.54048L15.4545 8.54545H8.54545V15.4545C8.54545 15.7558 8.30125 16 8 16C7.72386 16 7.49564 15.7948 7.45953 15.5286L7.45455 15.4545V8.54545H0.545455C0.244208 8.54545 0 8.30125 0 8C0 7.72386 0.205203 7.49564 0.47144 7.45953L0.545455 7.45455H7.45455V0.545455C7.45455 0.244208 7.69875 0 8 0Z"
      fill={color || 'white'}
    />
  </svg>
);

// Plus icon with circular background from Ecart component
export const PlusCircleIcon: React.FC<IconProps> = ({ className, size = 24, color }) => (
  <svg 
    width={size} 
    height={size} 
    viewBox="0 0 24 24" 
    fill="none" 
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <rect width="24" height="24" rx="12" fill="#EAECED" />
    <path
      d="M12.8555 11.1641H15.8789V12.875H12.8555V15.8828H11.1445V12.875H8.12109V11.1641H11.1445V8.11719H12.8555V11.1641Z"
      fill={color || "#11161A"}
    />
  </svg>
);

// Minus icon with circular background from Ecart component
export const MinusCircleIcon: React.FC<IconProps> = ({ className, size = 24, color }) => (
  <svg 
    width={size} 
    height={size} 
    viewBox="0 0 25 24" 
    fill="none" 
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <rect x="0.5" width="24" height="24" rx="12" fill="#EAECED" />
    <path d="M15.1534 11.0396V12.96H9.84656V11.0396H15.1534Z" fill={color || "#11161A"} />
  </svg>
);

// Arrow down icon from Accordion component
export const ArrowDownIcon: React.FC<IconProps & { isOpen?: boolean; theme?: 'white' | 'blue' }> = ({ 
  className, 
  size = 16, 
  color,
  isOpen = false, 
  theme = 'white' 
}) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={`${className} ${isOpen ? 'accordion-arrow--open' : ''}`}
  >
    <path
      d="M4 6L8 10L12 6"
      stroke={color || (theme === 'blue' ? '#ffffff' : '#11161A')}
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

// Power/Switch icon from Switch component
export const PowerIcon: React.FC<IconProps & { isOff?: boolean }> = ({ 
  className, 
  size = 16, 
  color,
  isOff = false 
}) => (
  <svg 
    width={size} 
    height={size} 
    viewBox="0 0 16 16" 
    fill="none" 
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path
      d="M9.56529 2.85352C9.66365 2.57607 9.96837 2.43116 10.246 2.5293C13.4295 3.65507 15.3392 6.91015 14.7684 10.2383C14.1974 13.5667 11.3114 16 7.93443 16C4.55739 16 1.67151 13.5667 1.10045 10.2383C0.5296 6.91011 2.4393 3.65504 5.62291 2.5293C5.9005 2.43115 6.20523 2.57605 6.30357 2.85352C6.40176 3.13124 6.2561 3.43599 5.97838 3.53418C3.28438 4.48672 1.669 7.2423 2.1522 10.0586C2.63557 12.8747 5.07706 14.9336 7.93443 14.9336C10.7918 14.9336 13.2333 12.8747 13.7167 10.0586C14.1999 7.24233 12.5844 4.48676 9.89049 3.53418C9.61276 3.43599 9.4671 3.13124 9.56529 2.85352ZM7.93443 0C8.22892 3.10447e-05 8.46754 0.238727 8.46763 0.533203V7.4668C8.46763 7.76135 8.22898 8.00095 7.93443 8.00098C7.63986 8.00098 7.40123 7.76137 7.40123 7.4668V0.533203C7.40132 0.238707 7.63991 0 7.93443 0Z"
      fill={color || (isOff ? '#999FA1' : '#009CDF')}
    />
  </svg>
);

// Switch thumb/circle from Switch component
export const SwitchThumbIcon: React.FC<IconProps & { isOff?: boolean }> = ({ 
  className, 
  size = 32, 
  color,
  isOff = false 
}) => (
  <svg 
    width={size} 
    height={size} 
    viewBox="0 0 32 32" 
    fill="none" 
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <circle cx="16" cy="16" r="16" fill={color || (isOff ? 'white' : '#009cdf')} />
  </svg>
);

// Target/Crosshair icon from Timer component
export const TargetIcon: React.FC<IconProps> = ({ className, size = 16, color }) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path
      d="M16 8C16 8.276 15.776 8.5 15.5 8.5L13.4766 8.5C13.238 11.1345 11.1345 13.238 8.5 13.4766L8.5 15.5C8.5 15.776 8.276 16 8 16C7.724 16 7.5 15.776 7.5 15.5L7.5 13.4766C4.86554 13.238 2.763 11.1345 2.52441 8.5L0.5 8.5C0.224 8.5 -3.61755e-07 8.276 -3.49691e-07 8C-3.29564e-07 7.724 0.224 7.5 0.5 7.5L2.52441 7.5C2.763 4.86555 4.86554 2.76198 7.5 2.52344L7.5 0.5C7.5 0.224 7.724 -3.61755e-07 8 -3.4969e-07C8.276 -3.29563e-07 8.5 0.224 8.5 0.5L8.5 2.52344C11.1345 2.76199 13.238 4.86551 13.4766 7.5L15.5 7.5C15.776 7.5 16 7.724 16 8ZM12.5 8C12.5 5.51867 10.4813 3.5 8 3.5C5.51867 3.5 3.5 5.51867 3.5 8C3.5 10.4813 5.51867 12.5 8 12.5C10.4813 12.5 12.5 10.4813 12.5 8ZM10 8C10 9.10457 9.10457 10 8 10C6.89543 10 6 9.10457 6 8C6 6.89543 6.89543 6 8 6C9.10457 6 10 6.89543 10 8Z"
      fill={color || "currentColor"}
    />
  </svg>
);

// Previous/Arrow left icon from Timer component
export const PreviousIcon: React.FC<IconProps> = ({ className, size = 16, color }) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M11.9813 2.39178C12.1589 2.38845 12.3342 2.43251 12.4892 2.51941C12.6441 2.60631 12.7731 2.73291 12.8629 2.88621C12.9527 3.0395 13 3.21395 13 3.3916L12.5 3.3916H13V12.6085C13 12.7862 12.9527 12.9606 12.8629 13.1139C12.7731 13.2672 12.6441 13.3938 12.4892 13.4807C12.3342 13.5676 12.1589 13.6117 11.9813 13.6084C11.8037 13.605 11.6301 13.5545 11.4785 13.4618L3.93741 8.85335C3.79124 8.76403 3.67046 8.63865 3.58667 8.48923C3.50287 8.33982 3.45886 8.17138 3.45886 8.00007C3.45886 7.82877 3.50287 7.66033 3.58667 7.51092C3.67046 7.3615 3.79124 7.23612 3.93741 7.14679L11.4785 2.53832C11.6301 2.44568 11.8037 2.3951 11.9813 2.39178ZM12 3.3916L4.45886 8.00007L4.19814 7.57343L4.45886 8.00007L12 12.6085V3.3916Z"
      fill={color || "black"}
    />
  </svg>
);

// Next/Arrow right icon from Timer component
export const NextIcon: React.FC<IconProps> = ({ className, size = 16, color }) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M3.51084 2.51941C3.66579 2.43251 3.84109 2.38845 4.01871 2.39178C4.19633 2.3951 4.36986 2.44568 4.52145 2.53832L12.0626 7.14679C12.2088 7.23612 12.3295 7.3615 12.4133 7.51092C12.4971 7.66033 12.5411 7.82877 12.5411 8.00007C12.5411 8.17138 12.4971 8.33982 12.4133 8.48923C12.3295 8.63865 12.2088 8.76403 12.0626 8.85335L4.52145 13.4618C4.36986 13.5545 4.19633 13.605 4.01871 13.6084C3.84109 13.6117 3.66579 13.5676 3.51084 13.4807C3.3559 13.3938 3.2269 13.2672 3.13711 13.1139C3.04733 12.9606 3 12.7862 3 12.6085V3.3916C3 3.21395 3.04733 3.0395 3.13711 2.88621C3.22689 2.73292 3.35589 2.60631 3.51084 2.51941ZM11.5411 8.00007L4 3.3916V12.6085L11.5411 8.00007Z"
      fill={color || "black"}
    />
  </svg>
);

// Pause icon from Timer component
export const PauseIcon: React.FC<IconProps> = ({ className, size = 24, color }) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M12 4.5C7.85786 4.5 4.5 7.85786 4.5 12C4.5 15.1788 6.47789 17.8975 9.27283 18.989C9.65866 19.1397 9.8493 19.5746 9.69862 19.9604C9.54794 20.3463 9.113 20.5369 8.72717 20.3862C5.37607 19.0775 3 15.8172 3 12C3 7.02944 7.02944 3 12 3C16.2192 3 19.7585 5.90255 20.7337 9.81878C20.9078 10.5179 21 11.2487 21 12C21 12.4142 20.6642 12.75 20.25 12.75C19.8358 12.75 19.5 12.4142 19.5 12C19.5 11.3719 19.4229 10.7628 19.2781 10.1812C18.4655 6.91754 15.5141 4.5 12 4.5Z"
      fill={color || "black"}
    />
  </svg>
);

// Play icon from Timer component
export const PlayIcon: React.FC<IconProps> = ({ className, size = 24, color }) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path
      d="M20.25 12C20.25 11.3103 20.1654 10.6404 20.0059 10C19.112 6.41005 15.8666 3.75 12 3.75C7.44365 3.75 3.75 7.44365 3.75 12C3.75 15.498 5.92698 18.4875 9 19.6876"
      stroke={color || "black"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

// Freeze/Snowflake icon from Timer component
export const FreezeIcon: React.FC<IconProps> = ({ className, size = 14, color }) => (
  <svg 
    width={size} 
    height="12" 
    viewBox="0 0 14 12" 
    fill="none" 
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path 
      d="M8.14697 0.146484C8.34224 -0.0486747 8.65878 -0.0487434 8.854 0.146484C9.04889 0.341739 9.04905 0.658358 8.854 0.853516L7.50049 2.20703V5.13281L10.0337 3.66992L10.5298 1.82129C10.6012 1.5547 10.8755 1.3966 11.1421 1.46777C11.4088 1.53922 11.5679 1.8134 11.4966 2.08008L11.0767 3.64648L12.6421 4.06543C12.9088 4.1369 13.0681 4.41198 12.9966 4.67871C12.925 4.94527 12.6499 5.10368 12.3833 5.03223L10.5347 4.53613L7.99951 5.99902L10.5347 7.46191L12.3833 6.96777C12.65 6.8963 12.9251 7.05456 12.9966 7.32129C13.068 7.58799 12.9088 7.86213 12.6421 7.93359L11.0767 8.35352L11.4966 9.91992C11.5677 10.1865 11.4086 10.4608 11.1421 10.5322C10.8756 10.6033 10.6013 10.4451 10.5298 10.1787L10.0337 8.32812L7.50049 6.86523V9.79297L8.854 11.1465C9.04889 11.3417 9.04905 11.6584 8.854 11.8535C8.65885 12.0487 8.34226 12.0484 8.14697 11.8535L7.00049 10.707L5.854 11.8535C5.65885 12.0487 5.34226 12.0484 5.14697 11.8535C4.95171 11.6583 4.95171 11.3417 5.14697 11.1465L6.50049 9.79297V6.86523L3.96533 8.32812L3.47021 10.1787C3.39865 10.4451 3.12439 10.6034 2.85791 10.5322C2.59128 10.4608 2.43314 10.1866 2.50439 9.91992L2.92334 8.35352L1.35791 7.93359C1.09118 7.86212 0.932919 7.58802 1.00439 7.32129C1.07593 7.05464 1.35001 6.89631 1.6167 6.96777L3.46436 7.46191L5.99951 5.99902L3.46436 4.53613L1.6167 5.03223C1.35014 5.10366 1.07608 4.94513 1.00439 4.67871C0.932919 4.41198 1.09118 4.1369 1.35791 4.06543L2.92334 3.64648L2.50439 2.08008C2.43293 1.81334 2.59118 1.53924 2.85791 1.46777C3.12453 1.39654 3.39878 1.55467 3.47021 1.82129L3.96533 3.66992L6.50049 5.13281V2.20703L5.14697 0.853516C4.95171 0.658253 4.95171 0.341747 5.14697 0.146484C5.34224 -0.0486746 5.65878 -0.0487434 5.854 0.146484L7.00049 1.29297L8.14697 0.146484Z" 
      fill={color || "black"}
    />
  </svg>
);

// Anonymize/Eye icon from Timer component
export const AnonymizeIcon: React.FC<IconProps & { isAnonymised?: boolean }> = ({ 
  className, 
  size = 18, 
  color,
  isAnonymised = false 
}) => (
  <svg 
    width={size} 
    height="12" 
    viewBox="0 0 18 12" 
    fill="none" 
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path 
      fillRule="evenodd" 
      clipRule="evenodd" 
      d="M4.19571 0.9375H13.9316L13.9576 0.939919L13.9055 1.5C13.9576 0.939919 13.958 0.939955 13.9584 0.939992L13.9593 0.940074L13.9612 0.940263L13.966 0.940753L13.9794 0.942218C13.9899 0.943426 14.0036 0.945121 14.0203 0.947429C14.0536 0.952044 14.0989 0.959129 14.1545 0.969722C14.2655 0.990879 14.4186 1.02621 14.5998 1.08426C14.9611 1.20007 15.4415 1.40866 15.9224 1.78153C16.9079 2.54562 17.8125 3.93493 17.8125 6.375C17.8125 8.84977 16.7446 10.2418 15.6228 10.9916C15.0757 11.3573 14.5319 11.5602 14.1264 11.6723C13.9228 11.7285 13.7514 11.7626 13.6282 11.7828C13.5666 11.7929 13.5167 11.7996 13.4807 11.8039C13.4626 11.8061 13.448 11.8076 13.437 11.8087L13.4234 11.81L13.4186 11.8104L13.4168 11.8106L13.416 11.8106C13.4157 11.8107 13.4154 11.8107 13.3704 11.25L13.416 11.8106L13.3929 11.8125H13.3704C12.4693 11.8125 11.7717 11.6348 11.2171 11.3425C10.6627 11.0503 10.2868 10.6623 10.0046 10.2977C9.86569 10.1182 9.74696 9.94078 9.64616 9.78996C9.5407 9.6322 9.46023 9.51197 9.38106 9.41262C9.22707 9.21935 9.16773 9.21939 9.13503 9.21941H9.13398C9.09752 9.21941 9.03241 9.22191 8.87346 9.41718C8.79345 9.51548 8.71127 9.63581 8.60695 9.79107C8.60069 9.80039 8.59437 9.80981 8.58797 9.81934C8.49236 9.96175 8.38151 10.1269 8.25589 10.2929C7.98421 10.6519 7.62551 11.0405 7.10214 11.335C6.57573 11.6313 5.91831 11.8125 5.07599 11.8125H5.0488L5.02173 11.8099L5.07599 11.25C5.02173 11.8099 5.02205 11.8099 5.02173 11.8099L5.0204 11.8097L5.01868 11.8096L5.01405 11.8091L5.00016 11.8076C4.98888 11.8063 4.97357 11.8045 4.95451 11.8019C4.91641 11.7969 4.8632 11.7892 4.79703 11.7779C4.66485 11.7553 4.47999 11.718 4.25972 11.6585C3.82115 11.5401 3.23123 11.3305 2.63538 10.9643C1.42058 10.2176 0.212463 8.83259 0.187947 6.38062C0.163902 3.97575 1.11355 2.587 2.13375 1.81616C2.63171 1.43991 3.12954 1.22329 3.50294 1.10027C3.69026 1.03855 3.84839 0.999684 3.96267 0.975868C4.01989 0.963945 4.06636 0.955744 4.10027 0.950316C4.11724 0.947601 4.13108 0.945576 4.14159 0.944124L4.15484 0.942358L4.15953 0.941769L4.16139 0.941543L4.1622 0.941446C4.16257 0.941403 4.16292 0.941361 4.22872 1.5L4.1622 0.941446L4.19571 0.9375ZM4.26997 2.0625C4.25203 2.06549 4.22575 2.07021 4.19218 2.07721C4.11398 2.09351 3.99723 2.1219 3.85498 2.16877C3.56924 2.26291 3.18912 2.42877 2.81194 2.71376C2.08184 3.2654 1.29234 4.31414 1.31289 6.36938C1.33297 8.37752 2.28763 9.43001 3.22447 10.0058C3.70444 10.3008 4.18756 10.4737 4.55306 10.5724C4.73484 10.6215 4.88477 10.6515 4.98688 10.669C5.03785 10.6778 5.07667 10.6833 5.1013 10.6866C5.10355 10.6869 5.10569 10.6871 5.10771 10.6874C5.76441 10.683 6.21815 10.5416 6.55042 10.3546C6.89104 10.1629 7.13992 9.90327 7.35877 9.61404C7.46458 9.47422 7.55912 9.33345 7.65787 9.18641L7.67313 9.1637C7.77297 9.01508 7.8831 8.85179 8.00097 8.70698C8.23778 8.41606 8.59073 8.09441 9.13398 8.09441C9.6812 8.09441 10.0292 8.42071 10.2609 8.71155C10.3706 8.8492 10.4746 9.00486 10.569 9.14611L10.5815 9.1648C10.6838 9.31787 10.7824 9.46461 10.8943 9.6092C11.1139 9.89292 11.3735 10.1532 11.7416 10.3472C12.1049 10.5387 12.6087 10.6838 13.3424 10.6874C13.3439 10.6873 13.3456 10.6871 13.3473 10.6869C13.368 10.6844 13.4015 10.6799 13.4459 10.6727C13.5349 10.658 13.6667 10.6321 13.8268 10.5879C14.1487 10.4989 14.5748 10.3389 14.9976 10.0563C15.8156 9.50956 16.6875 8.46406 16.6875 6.375C16.6875 4.25124 15.9198 3.20305 15.2331 2.6706C14.8779 2.3952 14.5221 2.24075 14.2564 2.1556C14.124 2.11316 14.0158 2.08853 13.944 2.07485C13.9117 2.0687 13.887 2.0648 13.8709 2.0625H4.26997ZM13.8498 2.05973C13.8494 2.05969 13.8497 2.05972 13.8508 2.05985L13.8498 2.05973Z" 
      fill={color || (isAnonymised ? "white" : "black")}
    />
    <path 
      fillRule="evenodd" 
      clipRule="evenodd" 
      d="M5.625 5.0625C4.77651 5.0625 4.3125 5.59288 4.3125 6C4.3125 6.40712 4.77651 6.9375 5.625 6.9375C6.47349 6.9375 6.9375 6.40712 6.9375 6C6.9375 5.59288 6.47349 5.0625 5.625 5.0625ZM3.1875 6C3.1875 4.75027 4.40242 3.9375 5.625 3.9375C6.84758 3.9375 8.0625 4.75027 8.0625 6C8.0625 7.24973 6.84758 8.0625 5.625 8.0625C4.40242 8.0625 3.1875 7.24973 3.1875 6Z" 
      fill={color || (isAnonymised ? "white" : "black")}
    />
    <path 
      fillRule="evenodd" 
      clipRule="evenodd" 
      d="M12.375 5.0625C11.5265 5.0625 11.0625 5.59288 11.0625 6C11.0625 6.40712 11.5265 6.9375 12.375 6.9375C13.2235 6.9375 13.6875 6.40712 13.6875 6C13.6875 5.59288 13.2235 5.0625 12.375 5.0625ZM9.9375 6C9.9375 4.75027 11.1524 3.9375 12.375 3.9375C13.5976 3.9375 14.8125 4.75027 14.8125 6C14.8125 7.24973 13.5976 8.0625 12.375 8.0625C11.1524 8.0625 9.9375 7.24973 9.9375 6Z" 
      fill={color || (isAnonymised ? "white" : "black")}
    />
  </svg>
);

// User icon
export const UserIcon: React.FC<IconProps> = ({ className, size = 16, color }) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path
      d="M8.00037 2.66699C9.76603 2.66724 11.1976 4.14551 11.1976 5.96875C11.1975 7.78449 9.77755 9.25735 8.02185 9.26953C10.0979 9.27896 11.9455 10.6336 12.6381 12.6562C12.7286 12.9207 12.5944 13.2112 12.3383 13.3047C12.0823 13.3979 11.8019 13.2592 11.7113 12.9951C11.1554 11.3713 9.66826 10.2853 8.00037 10.2852C6.33234 10.2852 4.84537 11.3712 4.28943 12.9951C4.19884 13.2595 3.91757 13.3981 3.6615 13.3047C3.40536 13.2112 3.27115 12.9207 3.36169 12.6562C4.05415 10.6337 5.90196 9.2791 7.97791 9.26953C6.2223 9.25723 4.80321 7.78442 4.8031 5.96875C4.8031 4.1454 6.23455 2.66706 8.00037 2.66699ZM8.00037 3.68262C6.7779 3.68268 5.7865 4.70644 5.7865 5.96875C5.78661 7.23096 6.77797 8.25384 8.00037 8.25391C9.22262 8.25366 10.2141 7.23085 10.2142 5.96875C10.2142 4.70655 9.22269 3.68286 8.00037 3.68262Z"
      fill={color || "black"}
    />
  </svg>
);

// Export all icons as a single object for easier imports
export const Icons = {
  Send: SendIcon,
  Edit: EditIcon,
  Trash: TrashIcon,
  Success: SuccessIcon,
  Failure: FailureIcon,
  Partial: PartialIcon,
  Spinner: SpinnerIcon,
  Plus: PlusIcon,
  PlusCircle: PlusCircleIcon,
  MinusCircle: MinusCircleIcon,
  ArrowDown: ArrowDownIcon,
  Power: PowerIcon,
  SwitchThumb: SwitchThumbIcon,
  Target: TargetIcon,
  Previous: PreviousIcon,
  Next: NextIcon,
  Pause: PauseIcon,
  Play: PlayIcon,
  Freeze: FreezeIcon,
  Anonymize: AnonymizeIcon,
  User: UserIcon,
};

export default Icons;